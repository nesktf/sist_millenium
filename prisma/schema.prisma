// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://funny_user:funny_password@localhost:5435/millenium"
}

model CategoriaArticulo {
  id      Int @id @default(autoincrement())
  nombre  String @db.VarChar(60)

  articulos Articulo[]
}

model MarcaArticulo {
  id      Int @id @default(autoincrement())
  nombre  String @db.VarChar(60)

  articulos Articulo[]
}

model Articulo {
  id            Int @id @default(autoincrement())
  codigo        String @unique @db.VarChar(60)
  nombre        String @db.VarChar(120)
  id_categoria  Int?
  id_marca      Int?
  // u_medida      String? @db.VarChar(20) // FIXME: Add an enum for this?
  
  depositos     ArticDepos[]
  detalles_orden DetalleOrdenCompra[]
  detalles_comprobante DetalleComprobanteProveedor[]
  categoria     CategoriaArticulo? @relation(fields: [id_categoria], references: [id])
  marca         MarcaArticulo? @relation(fields: [id_marca], references: [id])
}

model Deposito {
  id          Int @id @default(autoincrement())
  nombre      String
  direccion   String
  cap_max     Int?

  articulos       ArticDepos[]
  movimientos     MovimientoStock[]
  // movimientos_ori MovimientoStock[] @relation("origen")
  // movimientos_des MovimientoStock[] @relation("destino")
}

model ArticDepos {
  id            Int @id @default(autoincrement())
  id_deposito   Int
  id_articulo   Int
  stock         Int @default(0)
  stock_min     Int @default(0)

  detalles_mov  DetalleMovimiento[]
  deposito      Deposito @relation(fields: [id_deposito], references: [id])
  articulo      Articulo @relation(fields: [id_articulo], references: [id])
}

enum NaturalezaMovimiento {
  INGRESO
  EGRESO
}

model TipoOperacion {
  id           Int @id @default(autoincrement())
  nombre       String @unique
  naturaleza   NaturalezaMovimiento

  movimientos  MovimientoStock[]
}

model TipoComprobante {
  id            Int @id @default(autoincrement())
  nombre        String @db.VarChar(60)
  observacion   String? @db.VarChar(200)

  movimientos   MovimientoStock[]
}

model MovimientoStock {
  id                  Int @id @default(autoincrement())
  id_deposito         Int
  // dep_origen_id       Int?
  // dep_destino_id      Int?
  fecha_hora          DateTime
  id_tipo_operacion   Int?
  num_comprobante     String? @unique @db.VarChar(40)
  id_tipo_comprobante Int?

  detalles_mov        DetalleMovimiento[]
  deposito            Deposito @relation(fields: [id_deposito], references: [id])
  // dep_origen          Deposito? @relation("origen", fields: [dep_origen_id], references: [id])
  // dep_destino         Deposito? @relation("destino", fields: [dep_destino_id], references: [id])
  tipo_comprobante    TipoComprobante? @relation(fields: [id_tipo_comprobante], references: [id])
  tipo_operacion      TipoOperacion? @relation(fields: [id_tipo_operacion], references: [id])
}

model DetalleMovimiento {
  id              Int @id @default(autoincrement())
  id_movimiento   Int
  id_artic_depos  Int
  cantidad        Int

  movimiento      MovimientoStock @relation(fields: [id_movimiento], references: [id])
  artic_depos     ArticDepos @relation(fields: [id_artic_depos], references: [id])
}

enum EstadoProveedor {
  ACTIVO
  INACTIVO
}

model Proveedor {
  id Int @id @default(autoincrement())
  nombre String
  cuit String
  razon_social String
  domicilio String
  email String
  estado EstadoProveedor

  comprobantes ComprobanteProveedor[]
}

model TipoComprobanteProveedor {
  id Int @id @default(autoincrement())
  nombre String
  descripcion String

  comprobantes ComprobanteProveedor[]
}

model ComprobanteProveedor {
  id Int @id @default(autoincrement())
  id_proveedor Int
  id_tipo_comprobante Int
  id_orden_compra Int?
  fecha DateTime
  letra String @db.VarChar(1)
  sucursal String @db.VarChar(4)
  numero String @db.VarChar(8)

  proveedor Proveedor @relation(fields: [id_proveedor], references: [id])
  tipo_comprobante TipoComprobanteProveedor @relation(fields: [id_tipo_comprobante], references: [id])
  orden_pago OrdenPago?
  orden_compra OrdenCompra? @relation(fields: [id_orden_compra], references: [id])
  detalles DetalleComprobanteProveedor[]
}

model DetalleComprobanteProveedor {
  id Int @id @default(autoincrement())
  id_comprobante Int
  id_articulo Int
  cantidad Int
  precio_unitario Int
  observacion String?

  comprobante ComprobanteProveedor @relation(fields: [id_comprobante], references: [id])
  articulo Articulo @relation(fields: [id_articulo], references: [id])
}

enum EstadoOrdenPago {
  PENDIENTE
  PAGADO
  CANCELADO
}

model OrdenPago {
  id Int @id @default(autoincrement())
  id_comprobante Int @unique
  fecha DateTime
  estado EstadoOrdenPago
  cantidad Int?

  comprobante ComprobanteProveedor? @relation(fields: [id_comprobante], references: [id])
}

enum FormaDePago {
  EFECTIVO
  TRANSFERENCIA
}

model DetalleOrdenCompra {
  id Int @id @default(autoincrement())
  id_orden Int
  id_articulo Int
  precio Int
  cantidad Int

  orden_compra OrdenCompra @relation(fields: [id_orden], references: [id])
  articulo Articulo @relation(fields: [id_articulo], references: [id])
}

model OrdenCompra {
  id Int @id @default(autoincrement())
  precio_total Int
  forma_pago FormaDePago
  saldo Int

  detalle DetalleOrdenCompra[]
  comprobante ComprobanteProveedor[]
}
